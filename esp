local ESP_MOD = {}
ESP_MOD.ESPcache = {};
local players = game:GetService('Players')
local camera = workspace.CurrentCamera;
local lp = players.LocalPlayer
function ESP_MOD.createSet(class, properties)
    local drawing = Drawing.new(class);
    for property, value in pairs(properties) do
        drawing[property] = value;
    end
    return drawing;
end
function ESP_MOD.createEsp(player)
    local esp = {
        tracer = ESP_MOD.createSet("Line", {
            Thickness = ESP_MOD.ESP_SETTINGS.TracerThickness,
            Color = ESP_MOD.ESP_SETTINGS.TracerColor,
            Transparency = 0.5
        }),
        box = ESP_MOD.createSet("Square", {
            Color = ESP_MOD.ESP_SETTINGS.BoxColor,
            Thickness = 1,
            Filled = false
        }),
        name = ESP_MOD.createSet("Text", {
            Color = ESP_MOD.ESP_SETTINGS.NameColor,
            Outline = true,
            Center = true,
            Size = 13
        }),
        health = ESP_MOD.createSet("Line", {
            Thickness = 1
        }),
        distance = ESP_MOD.createSet("Text", {
            Color = Color3.new(1, 1, 1),
            Size = 12,
            Outline = true,
            Center = true
        }),
        healthText = ESP_MOD.createSet("Text", {
            Color = Color3.new(1, 1, 1),
            Size = 12,
            Outline = true,
            Center = true
        }),
        tracer = ESP_MOD.createSet("Line", {
            Thickness = ESP_MOD.ESP_SETTINGS.TracerThickness,
            Color = ESP_MOD.ESP_SETTINGS.TracerColor,
            Transparency = 1
        }),
        box3DLines = {},
        boxLines = {}
    };
    ESP_MOD.ESPcache[player] = esp;
end

function ESP_MOD.create3DBoxLines(esp)
    for i = 1, 12 do -- 12 lines for a 3D box
        esp.box3DLines[i] = ESP_MOD.createSet("Line", {
            Thickness = 1,
            Color = ESP_MOD.ESP_SETTINGS.BoxColor,
            Transparency = 1,
            Visible = false
        })
    end
end

function ESP_MOD.update3DBox(esp, rootPart, humanoid,plrf)
    if not rootPart then return end
    local player = players:GetPlayerFromCharacter(rootPart.Parent)
    local isTargetPlayer = (player == plrf)
    local highlightColor = Color3.new(250/255, 33/255, 17/255) -- Proper Color3 format
    local height = humanoid and (humanoid.HipHeight + humanoid.Parent:FindFirstChild("Head").Size.Y * 0.5) or 4.3
    local width = 1.6 * (height / 4.3) -- Scale width proportionally
    local depth = 1.6 * (height / 4.3) -- Scale depth proportionally
    local size = Vector3.new(width+1.1, height+1.1, depth+1.1)
    local corners = {
        rootPart.CFrame * CFrame.new(size.X, size.Y, size.Z).Position,
        rootPart.CFrame * CFrame.new(-size.X, size.Y, size.Z).Position,
        rootPart.CFrame * CFrame.new(-size.X, -size.Y, size.Z).Position,
        rootPart.CFrame * CFrame.new(size.X, -size.Y, size.Z).Position,
        rootPart.CFrame * CFrame.new(size.X, size.Y, -size.Z).Position,
        rootPart.CFrame * CFrame.new(-size.X, size.Y, -size.Z).Position,
        rootPart.CFrame * CFrame.new(-size.X, -size.Y, -size.Z).Position,
        rootPart.CFrame * CFrame.new(size.X, -size.Y, -size.Z).Position
    }

    local screenCorners = {}
    local allOnScreen = true
    for i, corner in ipairs(corners) do
        local screenPoint, onScreen = camera:WorldToViewportPoint(corner)
        screenCorners[i] = Vector2.new(screenPoint.X, screenPoint.Y)
        if not onScreen then allOnScreen = false end
    end

    if allOnScreen then
        if #esp.box3DLines == 0 then
            ESP_MOD.create3DBoxLines(esp)
        end
        local connections = {
            {1, 2}, {2, 3}, {3, 4}, {4, 1},
            {5, 6}, {6, 7}, {7, 8}, {8, 5},
            {1, 5}, {2, 6}, {3, 7}, {4, 8} 
        }
        for i, connection in ipairs(connections) do
            local line = esp.box3DLines[i]
            line.From = screenCorners[connection[1]]
            line.To = screenCorners[connection[2]]
            line.Visible = true
            line.Color = isTargetPlayer and highlightColor or ESP_MOD.ESP_SETTINGS.BoxColor
        end
    else
        for _, line in ipairs(esp.box3DLines) do
            line.Visible = false
        end
    end
    if screenCorners[1] and screenCorners[2] then
        return Vector2.new((screenCorners[1].X + screenCorners[2].X) / 2, (screenCorners[1].Y + screenCorners[2].Y) / 2)
    end
    return nil
end

function ESP_MOD.isPlayerBehindWall(targetPlayer)
    local localCharacter = lp.Character
    local targetCharacter = targetPlayer.Character
    if not localCharacter or not targetCharacter then
        return true
    end
    local localHead = localCharacter:FindFirstChild("Head")
    local targetHead = targetCharacter:FindFirstChild("Head")
    if not localHead or not targetHead then
        return true
    end
    local rayOrigin = localHead.Position
    local rayDirection = (targetHead.Position - rayOrigin)
    local rayLength = rayDirection.Magnitude
    rayDirection = rayDirection.Unit
    local ignoreList = {localCharacter, targetCharacter}
    local hitPart, hitPosition = workspace:FindPartOnRayWithIgnoreList(Ray.new(rayOrigin, rayDirection * rayLength),
        ignoreList, false, true)
    if hitPart then
        return true
    else
        return false
    end
end

function ESP_MOD.removeEsp(player)
    local esp = ESP_MOD.ESPcache[player];
    if not esp then return end
    for key, drawing in pairs(esp) do
        if drawing.Remove then
            drawing:Remove();
        elseif (key == "boxLines" or key == "box3DLines") then
            for _, line in ipairs(drawing) do
                if line.Remove then line:Remove() end
            end
        end
    end
    ESP_MOD.ESPcache[player] = nil;
end
function ESP_MOD.updateEsp(func)
    local plrf = func()
    local localPlayer = lp
    for player, esp in pairs(ESP_MOD.ESPcache) do
        local isTargetPlayer = (player == plrf)
        local h0 = ESP_MOD.ESP_SETTINGS.HighlightColor or Color3.new(250/255, 33/255, 17/255) -- Proper Color3 format
        local character, team = player.Character, player.Team
        if character and (not ESP_MOD.ESP_SETTINGS.Teamcheck or (team and team ~= localPlayer.Team)) then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            local head = character:FindFirstChild("Head")
            local humanoid = character:FindFirstChild("Humanoid")
            local isBehindWall = ESP_MOD.ESP_SETTINGS.WallCheck and ESP_MOD.isPlayerBehindWall(player)
            local shouldShow = not isBehindWall and ESP_MOD.ESP_SETTINGS.Enabled

            if rootPart and head and humanoid and shouldShow then
                local position, onScreen = camera:WorldToViewportPoint(rootPart.Position)
                if onScreen then
                    local hrp2D = camera:WorldToViewportPoint(rootPart.Position)
                    local charSize = (camera:WorldToViewportPoint(rootPart.Position - Vector3.new(0, 3, 0)).Y -
                                         camera:WorldToViewportPoint(rootPart.Position + Vector3.new(0, 2.6, 0)).Y) / 2
                    local boxSize = Vector2.new(math.floor(charSize * 1.8), math.floor(charSize * 1.9))
                    local boxPosition = Vector2.new(math.floor(hrp2D.X - charSize * 1.8 / 2),
                        math.floor(hrp2D.Y - charSize * 1.6 / 2))
                    if ESP_MOD.ESP_SETTINGS.ShowName and ESP_MOD.ESP_SETTINGS.Enabled then
                        esp.name.Visible = true
                        esp.name.Text = player.Name
                        esp.name.Position = Vector2.new(boxSize.X / 2 + boxPosition.X, boxPosition.Y - 16)
                        esp.name.Color = isTargetPlayer and h0 or ESP_MOD.ESP_SETTINGS.NameColor
                    else
                        esp.name.Visible = false
                    end
                    if ESP_MOD.ESP_SETTINGS.ShowBox and ESP_MOD.ESP_SETTINGS.Enabled then
                        if ESP_MOD.ESP_SETTINGS.BoxType == "2D" then
                            esp.box.Size = boxSize
                            esp.box.Position = boxPosition
                            esp.box.Color = isTargetPlayer and h0 or ESP_MOD.ESP_SETTINGS.NameColor
                            esp.box.Visible = true
                            for _, line in ipairs(esp.boxLines) do
                                line:Remove()
                            end
                        elseif ESP_MOD.ESP_SETTINGS.BoxType == "Corner Box Esp" then
                            local lineW = (boxSize.X / 5)
                            local lineH = (boxSize.Y / 6)
                            local lineT = 1

                            if #esp.boxLines == 0 then
                                for i = 1, 16 do
                                    local boxLine = ESP_MOD.createSet("Line", {
                                        Thickness = 1,
                                        Color = ESP_MOD.ESP_SETTINGS.BoxColor,
                                        Transparency = 1
                                    })
                                    esp.boxLines[#esp.boxLines + 1] = boxLine
                                end
                            end

                            local boxLines = esp.boxLines
                            boxLines[1].From = Vector2.new(boxPosition.X - lineT, boxPosition.Y - lineT)
                            boxLines[1].To = Vector2.new(boxPosition.X + lineW, boxPosition.Y - lineT)
                            boxLines[2].From = Vector2.new(boxPosition.X - lineT, boxPosition.Y - lineT)
                            boxLines[2].To = Vector2.new(boxPosition.X - lineT, boxPosition.Y + lineH)
                            boxLines[3].From = Vector2.new(boxPosition.X + boxSize.X - lineW, boxPosition.Y - lineT)
                            boxLines[3].To = Vector2.new(boxPosition.X + boxSize.X + lineT, boxPosition.Y - lineT)
                            boxLines[4].From = Vector2.new(boxPosition.X + boxSize.X + lineT, boxPosition.Y - lineT)
                            boxLines[4].To = Vector2.new(boxPosition.X + boxSize.X + lineT, boxPosition.Y + lineH)
                            boxLines[5].From = Vector2.new(boxPosition.X - lineT, boxPosition.Y + boxSize.Y - lineH)
                            boxLines[5].To = Vector2.new(boxPosition.X - lineT, boxPosition.Y + boxSize.Y + lineT)
                            boxLines[6].From = Vector2.new(boxPosition.X - lineT, boxPosition.Y + boxSize.Y + lineT)
                            boxLines[6].To = Vector2.new(boxPosition.X + lineW, boxPosition.Y + boxSize.Y + lineT)
                            boxLines[7].From = Vector2.new(boxPosition.X + boxSize.X - lineW,
                                boxPosition.Y + boxSize.Y + lineT)
                            boxLines[7].To = Vector2.new(boxPosition.X + boxSize.X + lineT,
                                boxPosition.Y + boxSize.Y + lineT)

                            boxLines[8].From = Vector2.new(boxPosition.X + boxSize.X + lineT,
                                boxPosition.Y + boxSize.Y - lineH)
                            boxLines[8].To = Vector2.new(boxPosition.X + boxSize.X + lineT,
                                boxPosition.Y + boxSize.Y + lineT)

                            for i = 9, 16 do
                                boxLines[i].Thickness = 2
                                boxLines[i].Transparency = 1
                            end

                            boxLines[9].From = Vector2.new(boxPosition.X, boxPosition.Y)
                            boxLines[9].To = Vector2.new(boxPosition.X, boxPosition.Y + lineH)

                            boxLines[10].From = Vector2.new(boxPosition.X, boxPosition.Y)
                            boxLines[10].To = Vector2.new(boxPosition.X + lineW, boxPosition.Y)

                            boxLines[11].From = Vector2.new(boxPosition.X + boxSize.X - lineW, boxPosition.Y)
                            boxLines[11].To = Vector2.new(boxPosition.X + boxSize.X, boxPosition.Y)

                            boxLines[12].From = Vector2.new(boxPosition.X + boxSize.X, boxPosition.Y)
                            boxLines[12].To = Vector2.new(boxPosition.X + boxSize.X, boxPosition.Y + lineH)

                            boxLines[13].From = Vector2.new(boxPosition.X, boxPosition.Y + boxSize.Y - lineH)
                            boxLines[13].To = Vector2.new(boxPosition.X, boxPosition.Y + boxSize.Y)

                            boxLines[14].From = Vector2.new(boxPosition.X, boxPosition.Y + boxSize.Y)
                            boxLines[14].To = Vector2.new(boxPosition.X + lineW, boxPosition.Y + boxSize.Y)

                            boxLines[15].From =
                                Vector2.new(boxPosition.X + boxSize.X - lineW, boxPosition.Y + boxSize.Y)
                            boxLines[15].To = Vector2.new(boxPosition.X + boxSize.X, boxPosition.Y + boxSize.Y)
                            boxLines[16].From =
                                Vector2.new(boxPosition.X + boxSize.X, boxPosition.Y + boxSize.Y - lineH)
                            boxLines[16].To = Vector2.new(boxPosition.X + boxSize.X, boxPosition.Y + boxSize.Y)

                            for _, line in ipairs(boxLines) do
                                line.Color = (plrf == player) and Color3.new(250, 33, 17) or
                                                 ESP_MOD.ESP_SETTINGS.BoxColor
                            end

                            for _, line in ipairs(boxLines) do
                                line.Visible = true
                            end
                            esp.box.Visible = false
                        elseif ESP_MOD.ESP_SETTINGS.BoxType == "3D" then
                            esp.box.Visible = false
                            for _, line in ipairs(esp.boxLines) do line:Remove() end
                            ESP_MOD.update3DBox(esp, rootPart, humanoid,plrf)
                            if ESP_MOD.ESP_SETTINGS.ShowHealth and head then
                                local headPos, headOnScreen = camera:WorldToViewportPoint(head.Position)
                                if headOnScreen then
                                    local healthPercentage = humanoid.Health / humanoid.MaxHealth
                                    local healthColor = ESP_MOD.ESP_SETTINGS.HealthLowColor:Lerp(
                                        ESP_MOD.ESP_SETTINGS.HealthHighColor, healthPercentage)
                                    local barWidth = 40
                                    local barHeight = 4
                                    local barYOffset = 20
                                    esp.health.Visible = true
                                    esp.health.From = Vector2.new(headPos.X - (barWidth / 2), headPos.Y - barYOffset)
                                    esp.health.To = Vector2.new(headPos.X - (barWidth / 2) + (barWidth * healthPercentage), headPos.Y - barYOffset)
                                    esp.health.Color = healthColor
                                    esp.health.Thickness = barHeight
                                    esp.healthText.Visible = true
                                    esp.healthText.Text = math.floor(healthPercentage * 100) .. "%"
                                    esp.healthText.Position = Vector2.new(headPos.X, headPos.Y - barYOffset - 15)  -- Adjust -15 to move text closer/farther
                                    esp.healthText.Color = healthColor
                                else
                                    esp.health.Visible = false
                                    esp.healthText.Visible = false
                                end
                            else
                                esp.health.Visible = false
                                esp.healthText.Visible = false
                            end
                        end
                    else
                        esp.box.Visible = false
                        for _, line in ipairs(esp.boxLines) do
                            line:Remove()
                        end
                        esp.boxLines = {}
                    end
                    if ESP_MOD.ESP_SETTINGS.ShowHealth and ESP_MOD.ESP_SETTINGS.Enabled then
                        esp.health.Visible = true
                        local healthPercentage = player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth
                        esp.health.From = Vector2.new((boxPosition.X - 5), boxPosition.Y + boxSize.Y)
                        esp.health.To = Vector2.new(esp.health.From.X, esp.health.From.Y - healthPercentage * boxSize.Y)
                        esp.health.Color = ESP_MOD.ESP_SETTINGS.HealthLowColor:Lerp(
                            ESP_MOD.ESP_SETTINGS.HealthHighColor, healthPercentage)
                    else
                        esp.health.Visible = false
                    end
                    if ESP_MOD.ESP_SETTINGS.ShowDistance and ESP_MOD.ESP_SETTINGS.Enabled then
                        local distance = (camera.CFrame.p - rootPart.Position).Magnitude
                        esp.distance.Text = string.format("%.1fm", distance)
                        esp.distance.Position =
                            Vector2.new(boxPosition.X + boxSize.X / 2, boxPosition.Y + boxSize.Y + 5)
                        esp.distance.Visible = true
                    else
                        esp.distance.Visible = false
                    end
                    if ESP_MOD.ESP_SETTINGS.ShowTracer and ESP_MOD.ESP_SETTINGS.Enabled then
                        local tracerY
                        if ESP_MOD.ESP_SETTINGS.TracerPosition == "Top" then
                            tracerY = 0
                        elseif ESP_MOD.ESP_SETTINGS.TracerPosition == "Middle" then
                            tracerY = camera.ViewportSize.Y / 2
                        else
                            tracerY = camera.ViewportSize.Y
                        end
                        esp.tracer.Color = isTargetPlayer and h0 or ESP_MOD.ESP_SETTINGS.TracerColor
                        esp.tracer.Transparency = 1
                        esp.tracer.Thickness = 2
                        if ESP_MOD.ESP_SETTINGS.Teamcheck and player.TeamColor == localPlayer.TeamColor then
                            esp.tracer.Visible = false
                        else
                            esp.tracer.Visible = true
                            esp.tracer.From = Vector2.new(camera.ViewportSize.X / 2, tracerY)
                            esp.tracer.To = Vector2.new(hrp2D.X, hrp2D.Y)
                        end
                    else
                        esp.tracer.Visible = false
                    end
                else
                    for _, drawing in pairs(esp) do
                        if drawing ~= esp.boxLines and drawing ~= esp.box3DLines then
                            drawing.Visible = false
                        end
                    end
                    for _, line in ipairs(esp.boxLines) do
                        line:Remove()
                    end
                    for _, line in ipairs(esp.box3DLines) do
                        line.Visible = false
                    end
                    esp.boxLines = {}
                end
            else
                for _, drawing in pairs(esp) do
                    if drawing ~= esp.boxLines and drawing ~= esp.box3DLines then
                        drawing.Visible = false
                    end
                end
                for _, line in ipairs(esp.boxLines) do
                    line:Remove()
                end
                for _, line in ipairs(esp.box3DLines) do
                    line.Visible = false
                end
                esp.boxLines = {}
            end
        else
            for _, drawing in pairs(esp) do
                if drawing ~= esp.boxLines and drawing ~= esp.box3DLines then
                    drawing.Visible = false
                end
            end
            for _, line in ipairs(esp.boxLines) do
                line:Remove()
            end
            for _, line in ipairs(esp.box3DLines) do
                line.Visible = false
            end
            esp.boxLines = {}
        end
    end
end
function ESP_MOD.SetESP()
    local players = game:GetService('Players')
    for _, player in ipairs(players:GetPlayers()) do
        if (player ~= lp) then
            ESP_MOD.createEsp(player);
        end
    end
end
return ESP_MOD
